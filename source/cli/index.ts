#!/usr/bin/env node
"use strict";

import { readFile, writeFile } from "fs/promises";
import { relative } from "path";

const config = JSON.parse(await readFile(process.argv[2] || "./htmx-router.json", "utf-8")) as {
	adapter?: "react",
	router: {
		folder: string,
		output: string
	}
};
console.log(config);

const routes = relative(config.router.output, config.router.folder).replaceAll("\\", "/").slice(1);
await writeFile(config.router.output, `/*-------------------------------------------
	Generated by htmx-router
	Warn: Any changes will be overwritten
-------------------------------------------*/

import { RouteModule } from "htmx-router";
import { RouteTree } from "htmx-router/bin/router";

const modules = import.meta.glob('${routes}/**/*.{ts,tsx}', { eager: true });

export const tree = new RouteTree();
for (const path in modules) {
	const tail = path.lastIndexOf(".");
	const url = path.slice(${routes.length+1}, tail);
	tree.ingest(url, modules[path] as RouteModule);
}`);